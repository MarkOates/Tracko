properties:


  - name: pieces
    type: std::vector<std::vector<Tracko::Piece>>
    init_with: '{}'
    getter: true
    getter_ref: true
    setter: true

  - name: swap_piece
    type: Tracko::Piece
    init_with: '{}'
    getter: false
    setter: true

  - name: num_rows
    type: int
    init_with: 0
    getter: true
    setter: false

  - name: num_columns
    type: int
    init_with: 0
    getter: true
    setter: false

  - name: cursor_x
    type: int
    init_with: 0
    getter: true
    setter: false

  - name: cursor_y
    type: int
    init_with: 0
    getter: true
    setter: false


methods:


  - name: move_cursor_up
    body: |
      cursor_y -= 1;
      if (cursor_y < 0) cursor_y = 0;
      return;


  - name: move_cursor_down
    body: |
      cursor_y += 1;
      if (cursor_y >= num_rows) cursor_y = (num_rows - 1);
      return;


  - name: move_cursor_left
    body: |
      cursor_x -= 1;
      if (cursor_x < 0) cursor_x = 0;
      return;


  - name: move_cursor_right
    body: |
      cursor_x += 1;
      if (cursor_x >= num_columns) cursor_x = (num_columns - 1);
      return;


  - name: swap
    guards: [ can_swap() ]
    body: |
      // TODO: Test this
      Tracko::Piece *piece_at_cursor = get_piece_at_cursor();
      Tracko::Piece intermediate_piece = *piece_at_cursor;
      *piece_at_cursor = swap_piece;
      swap_piece = intermediate_piece;
      return;


  - name: can_swap
    type: bool
    body: |
      if (!cursor_is_in_valid_position()) return false;
      Tracko::Piece *piece_at_cursor = get_piece_at_cursor();
      return piece_at_cursor->infer_can_swap();


  - name: cursor_is_in_valid_position
    type: bool
    body: |
      if (cursor_x < 0) return false;
      if (cursor_y < 0) return false;
      if (cursor_x >= num_columns) return false;
      if (cursor_y >= num_rows) return false;
      return true;


  - name: resize
    parameters:
      - name: num_columns
        type: int
        default_argument: 8
      - name: num_rows
        type: int
        default_argument: 8
    guards: [ (num_rows > 0), (num_columns > 0) ]
    body: |
      this->num_rows = num_rows;
      this->num_columns = num_columns;
      
      pieces.resize(num_columns);
      for (auto &piece : pieces) piece.resize(num_rows);

      swap_piece = Tracko::Piece();

      cursor_x = 0;
      cursor_y = 0;

      return;


  - name: fill_with_random_types
    parameters:
      - name: seed
        type: uint32_t
        default_argument: 76414 /*TRAIN*/
    body: |
      static AllegroFlare::Random random(seed);

      std::vector<Tracko::Piece::TileType> tile_types = {
         Tracko::Piece::TILE_TYPE_HORIZONTAL_BAR,
         Tracko::Piece::TILE_TYPE_VERTICAL_BAR,
         Tracko::Piece::TILE_TYPE_TOP_RIGHT_CURVE,
         Tracko::Piece::TILE_TYPE_RIGHT_BOTTOM_CURVE,
         Tracko::Piece::TILE_TYPE_BOTTOM_LEFT_CURVE,
         Tracko::Piece::TILE_TYPE_LEFT_TOP_CURVE,
      };

      // Fill the board with random pieces
      for (int x=0; x<num_columns; x++)
      {
         for (int y=0; y<num_rows; y++)
         {
            Tracko::Piece* piece = get_piece(x, y);
            piece->set_tile_type(random.get_random_element(tile_types));
         }
      }

      // Set the swap piece with a random piece
      swap_piece.set_tile_type(random.get_random_element(tile_types));

      return;
    body_dependency_symbols:
      - AllegroFlare::Random


  - name: initialize_pieces
    body: |
      // Initialize the pieces on the board
      for (int x=0; x<num_columns; x++)
      {
         for (int y=0; y<num_rows; y++)
         {
            Tracko::Piece* piece = get_piece(x, y);
            piece->initialize();
         }
      }

      // Initialize the swap piece (and reveal it)
      swap_piece.initialize();
      swap_piece.reveal();


  - name: get_piece_at_cursor
    type: Tracko::Piece*
    guards: [ cursor_is_in_valid_position() ]
    body: |
      return get_piece(cursor_x, cursor_y);


  - name: get_piece
    type: Tracko::Piece*
    parameters:
      - name: x
        type: int
        default_argument: 8
      - name: y
        type: int
        default_argument: 8
    guards: [ (x >= 0), (x < num_columns), (y >= 0), (y < num_rows) ]
    body: |
      return &pieces[x][y];


  - name: get_swap_piece
    type: Tracko::Piece*
    body: |
      return &swap_piece;


dependencies:


  - symbol: Tracko::Piece
    headers: [ Tracko/Piece.hpp ]
  - symbol: AllegroFlare::Random
    headers: [ AllegroFlare/Random.hpp ]


